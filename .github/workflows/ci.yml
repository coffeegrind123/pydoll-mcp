name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          chromium-chromedriver \
          xvfb \
          wget \
          gnupg \
          software-properties-common

    - name: Install Google Chrome (stable)
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Make PyDoll MCP server executable
      run: |
        chmod +x pydoll-mcp
        
    - name: Test PyDoll MCP server startup
      run: |
        timeout 5s python ./pydoll-mcp --help || echo "Server startup test completed"
        echo "âœ“ PyDoll MCP server is executable"

    - name: Lint with ruff
      run: |
        ruff check . --output-format=github
      continue-on-error: true

    - name: Type check with mypy
      run: |
        mypy pydoll-mcp --ignore-missing-imports
      continue-on-error: true

    - name: Run unit tests
      run: |
        export DISPLAY=:99
        export CHROME_BIN=/usr/bin/google-chrome-stable
        export CHROMIUM_BIN=/usr/bin/chromium-browser
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2
        python -m pytest tests/ -v \
          --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
          --cov=. \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          chromium-chromedriver \
          xvfb \
          wget \
          gnupg \
          software-properties-common

    - name: Install Google Chrome (stable)
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Make PyDoll MCP server executable
      run: |
        chmod +x pydoll-mcp

    - name: Run integration tests
      run: |
        export DISPLAY=:99
        export CHROME_BIN=/usr/bin/google-chrome-stable
        export CHROMIUM_BIN=/usr/bin/chromium-browser
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2
        python -m pytest tests/integration/ -v \
          --maxfail=5 \
          --timeout=60
      timeout-minutes: 10

    - name: Test MCP server startup
      run: |
        timeout 10s python ./pydoll-mcp || test $? = 124
        echo "MCP server startup test completed"

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true
      continue-on-error: true

    - name: Run Safety vulnerability check
      run: |
        safety check --json --output safety-report.json || true
        safety check || true
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json